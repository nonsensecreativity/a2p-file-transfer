/*
 * Copyright 2015
 *
 *     Olayinka S. Folorunso <mail@olayinkasf.com>
 *     http://olayinkasf.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package desktop.olayinka.file.transfer.view;


import com.olayinka.file.transfer.FileTransfer;
import com.olayinka.file.transfer.Utils;
import desktop.olayinka.file.transfer.AppContext;
import desktop.olayinka.file.transfer.AppSettings;

import javax.swing.*;
import java.awt.*;
import java.io.File;


/**
 * Created by Olayinka on 8/5/2015.
 */
public class FileTransferListenerImpl implements FileTransfer.FileTransferListener {
    private final AppContext mContext;
    private JProgressBar mProgressBar;
    private JPanel mTransferProgressPanel;
    private JLabel mStatusLabel;
    private JLabel mTitleLabel;
    private long mProgress;
    private String mFileName;
    private long mFileSize;


    public FileTransferListenerImpl(AppContext mContext) {
        mProgressBar.setForeground(AppSettings.APP_COLOR);
        this.mContext = mContext;
    }

    @Override
    public void registerFileName(String name) {
        mTitleLabel.setText(name);
        mFileName = name;
    }

    @Override
    public void registerFileSize(long maxBytesAvailable) {
        mFileSize = maxBytesAvailable;
    }

    @Override
    public void registerProgress(long readData) {
        mProgress = readData;
        mStatusLabel.setText("Transferred " + mProgress + "/" + mFileSize + " bytes");
        mProgressBar.setValue((int) ((mProgress * 100) / mFileSize));
    }

    @Override
    public void registerErrorMessage(String message) {
        mStatusLabel.setText("Error: " + message);
    }

    @Override
    public void registerFinished() {
        if (mProgress != mFileSize) {
            //TODO
            System.out.println();
        }
    }

    @Override
    public File getSaveDirectory() {
        return new File(Utils.currentDirectory(), "A2P File Transfer");
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mTransferProgressPanel = new JPanel();
        mTransferProgressPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        mTransferProgressPanel.setMaximumSize(new Dimension(455, 80));
        mTransferProgressPanel.setMinimumSize(new Dimension(455, 80));
        mTransferProgressPanel.setPreferredSize(new Dimension(455, 80));
        mTitleLabel = new JLabel();
        mTitleLabel.setFont(new Font(mTitleLabel.getFont().getName(), Font.BOLD, 14));
        mTitleLabel.setHorizontalAlignment(2);
        mTitleLabel.setHorizontalTextPosition(2);
        mTitleLabel.setMaximumSize(new Dimension(445, 20));
        mTitleLabel.setMinimumSize(new Dimension(445, 20));
        mTitleLabel.setPreferredSize(new Dimension(445, 20));
        mTitleLabel.setText("Label");
        mTransferProgressPanel.add(mTitleLabel);
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(4);
        label1.setHorizontalTextPosition(4);
        label1.setMaximumSize(new Dimension(20, 20));
        label1.setMinimumSize(new Dimension(20, 20));
        label1.setPreferredSize(new Dimension(20, 20));
        label1.setText("0");
        mTransferProgressPanel.add(label1);
        mProgressBar = new JProgressBar();
        mProgressBar.setMaximumSize(new Dimension(390, 12));
        mProgressBar.setMinimumSize(new Dimension(390, 12));
        mProgressBar.setPreferredSize(new Dimension(390, 12));
        mProgressBar.setString("");
        mProgressBar.setStringPainted(true);
        mTransferProgressPanel.add(mProgressBar);
        final JLabel label2 = new JLabel();
        label2.setHorizontalAlignment(2);
        label2.setHorizontalTextPosition(2);
        label2.setMaximumSize(new Dimension(25, 20));
        label2.setMinimumSize(new Dimension(25, 20));
        label2.setPreferredSize(new Dimension(25, 20));
        label2.setText("100");
        mTransferProgressPanel.add(label2);
        mStatusLabel = new JLabel();
        mStatusLabel.setMaximumSize(new Dimension(390, 20));
        mStatusLabel.setMinimumSize(new Dimension(390, 20));
        mStatusLabel.setPreferredSize(new Dimension(390, 20));
        mStatusLabel.setText("Label");
        mTransferProgressPanel.add(mStatusLabel);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mTransferProgressPanel;
    }
}
